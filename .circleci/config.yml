version: 2.1

executors:
  macos-executor:
    parameters:
      xcode:
        type: string
    shell: /bin/bash --login -eo pipefail
    macos:
      xcode: << parameters.xcode >>
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      HOMEBREW_LOGS: ~/homebrew-logs
      HOMEBREW_TEMP: ~/homebrew-temp
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      FL_OUTPUT_DIR: output
      FASTLANE_EXPLICIT_OPEN_SIMULATOR: 2

commands:
  prepare:
    parameters:
      scheme:
        type: string
    steps:
      - restore_cache:
          keys:
            - << parameters.scheme >>-v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install gems
          command: bundle check || bundle install --without=development
      - save_cache:
          key: << parameters.scheme >>-v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Install Swiftlint
          command: brew install swiftlint
      - run:
          name: Save Xcode version
          command: xcodebuild -version | tee .xcode-version
      - restore_cache:
          keys:
            - << parameters.scheme >>-v3-carthage-{{ checksum "Cartfile.resolved" }}-{{ checksum ".xcode-version" }}
      - run:
          name: Install dependencies
          command: carthage bootstrap --use-xcframeworks --no-use-binaries --cache-builds
      - save_cache:
          key: << parameters.scheme >>-v3-carthage-{{ checksum "Cartfile.resolved" }}-{{ checksum ".xcode-version" }}
          paths:
            - Carthage/Build
  test-ios:
    parameters:
      scheme:
        type: string
    steps:
      - run:
          name: Run iOS tests
          command: bundle exec fastlane ios ci
      - run:
          name: Upload coverage report
          command: bash <(curl -s https://codecov.io/bash) -J '<< parameters.scheme >>'
      - run:
          name: Run pod lib lint
          command: bundle exec fastlane ios pod_lint
      - store_test_results:
          path: output/scan
      - store_artifacts:
          path: output
  test-macos:
    parameters:
      scheme:
        type: string
    steps:
      - run:
          name: Run macOS tests
          command: |
            xcodebuild test -scheme << parameters.scheme >>-OSX -destination 'platform=macOS,arch=x86_64' | xcpretty
            swift test
  test-tvos:
    parameters:
      scheme:
        type: string
    steps:
      - run:
          name: Run tvOS tests
          command: xcodebuild test -scheme << parameters.scheme >>-tvOS -destination 'platform=tvOS Simulator,name=Apple TV' | xcpretty

jobs:
  build-test:
    parameters:
      platform:
        type: string
      xcode:
        type: string
      scheme:
        type: string
    executor:
      name: macos-executor
      xcode: << parameters.xcode >>
    steps:
      - checkout
      - prepare:
          scheme: << parameters.scheme >>
      - when:
          condition:
            equal: [ios, << parameters.platform >>]
          steps:
            - test-ios:
                scheme: << parameters.scheme >>
      - when:
          condition:
            equal: [macos, << parameters.platform >>]
          steps:
            - test-macos:
                scheme: << parameters.scheme >>
      - when:
          condition:
            equal: [tvos, << parameters.platform >>]
          steps:
            - test-tvos:
                scheme: << parameters.scheme >>

workflows:
  build:
    jobs:
      - build-test:
          scheme: "JWTDecode"
          matrix:
            parameters:
              platform: ["ios", "macos", "tvos"]
              xcode: ["13.0.0", "12.5.1"]
